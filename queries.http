# Тестовые данные

## Запрос моковых данных (запуск json-server с помощью команды `npm run mock:server`)
GET http://localhost:4321/api HTTP/1.1

###

# Пользователи
## Регистрация пользователя

POST http://localhost:4000/users/register HTTP/1.1
Content-Type: application/json

{
  "name": "User",
  "email": "usermail@mymail.com",
  "password": "mypassword",
  "isPro": true
}

###

## Авторизация пользователя

POST http://localhost:4000/users/login HTTP/1.1
Content-Type: application/json

{
  "email": "usermail@mymail.com",
  "password": "mypassword"
}

###

## Проверка статуса пользователя с помиощью {token}

GET http://localhost:4000/users/login HTTP/1.1
Content-Type: application/json
Authorization: Bearer {token}

###

# Предложения по аренде
## Получить список предложений

GET http://localhost:4000/offers HTTP/1.1
Content-Type: application/json

###

## Получить список в количестве {limit} предложений.

GET http://localhost:4000/offers/?limit=2 HTTP/1.1
Content-Type: application/json

###

## Создание предложения авторизованным пользователем с валидным {token}
POST http://localhost:4000/offers HTTP/1.1
Content-Type: application/json
Authorization: Bearer {token}

{
  "title": "New Offer Title",
  "description": "Brand new offer with description",
  "city": {
    "name": "Hamburg",
    "location": {
      "latitude": 53.550341,
      "longitude": 10.000654
    }
  },
  "previewImage": "http://localhost:4000/static/1.jpg",
  "offerImages": [
    "http://localhost:4000/static/1.jpg",
    "http://localhost:4000/static/2.jpg",
    "http://localhost:4000/static/3.jpg",
    "http://localhost:4000/static/4.jpg",
    "http://localhost:4000/static/5.jpg",
    "http://localhost:4000/static/6.jpg"
  ],
  "isPremium": false,
  "type": "house",
  "rooms": 2,
  "guests": 2,
  "price": 10000,
  "features": [
    "Washer",
    "Towels",
    "Fridge",
    "Baby seat"
  ],
  "location": {
    "latitude": 51.243402,
    "longitude": 6.791314
  }
}

###

## Получить подробную информацию по предложению с идентификатором {offerId}

GET http://localhost:4000/offers/{offerId} HTTP/1.1
Content-Type: application/json

###

## Редактирование своего предложения с идентификатором {offerId} авторизованным пользователем с валидным {token}
PUT http://localhost:4000/offers/{offerId} HTTP/1.1
Content-Type: application/json
Authorization: Bearer {token}

{
  "title": "Updated title",
  "description": "Updated description for this Offer",
  "previewImage": "http://localhost:4000/static/4.jpg",
  "isPremium": true,
  "type": "house",
  "rooms": 4,
  "guests": 4,
  "price": 11000
}

###

## Удаление своего предложения с идентификатором {offerId} авторизованным пользователем с валидным {token}

DELETE  http://localhost:4000/offers/{offerId} HTTP/1.1
Content-Type: application/json
Authorization: Bearer {token}

###

## Получить информацию по премиум предложениям

GET http://localhost:4000/offers/premium HTTP/1.1
Content-Type: application/json
X-City-Name: Amsterdam

###

## Получить список избранных предложений авторизованным пользователем с валидным {token}

GET http://localhost:4000/offers/favorites HTTP/1.1
Content-Type: application/json
Authorization: Bearer {token}

###

## Изменение статуса Избранное для предложения с идентификатором {offerId} авторизованным пользователем с валидным {token}

PUT http://localhost:4000/offers/favorites/{offerId} HTTP/1.1
Content-Type: application/json
Authorization: Bearer {token}

{
  "isFavorite": true
}

###

# Отзывы (комментарии)

## Добавление нового отзыва для предложения с идентификатором {offerId} авторизованным пользователем с валидным {token}

POST http://localhost:4000/reviews HTTP/1.1
Content-Type: application/json
Authorization: Bearer {token}

{
  "text": "Review text",
  "rating": 4,
  "offerId": "{offerId}"
}

###

## Получение отзывов для предложения с идентификатором {offerId}

GET http://localhost:4000/reviews/635538369ba80faea1c4de15 HTTP/1.1
Content-Type: application/json

###

## Загрузка аватарки пользователя с иднетификатором {userId}

POST http://localhost:4000/users/{userId}/avatar HTTP/1.1
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="avatar"; filename="avatar.jpg"
Content-Type: image/jpeg

< /Users/user/Desktop/avatar.jpg
------WebKitFormBoundary7MA4YWxkTrZu0gW--
